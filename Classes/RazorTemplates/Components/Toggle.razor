@code {
	[Parameter]
	public string id { get; set; }
	[Parameter]
	public string name { get; set; }
	[Parameter]
	public bool value { get; set; }
	/// <summary> This label supports i18n </summary>
	[Parameter]
	public string label { get; set; }
	/// <summary> This hint supports i18n </summary>
	[Parameter]
	public string hint { get; set; }
	[Parameter]
	public string hx_get { get; set; }
	[Parameter]
	public string hx_vals { get; set; }
	[Parameter]
	public RenderFragment ChildContent { get; set; }
}

<label class="label cursor-pointer">
	<span class="label-text font-semibold" hx-t="@label" hx-ext="i18n" />
	<input type="hidden" role="checkbox" name="@name" value="@value.ToString().ToLower()" />
	@if(value) {
		<input type="checkbox" class="toggle" onchange="const el = this.previousElementSibling;el.value = this.checked;" checked />
	} else {
		<input type="checkbox" class="toggle" onchange="const el = this.previousElementSibling;el.value = this.checked;" />
	}
</label>
@if (hint != null)
{
	<label class="px-1 pb-1 -mt-4" style="z-index: -1;">
		<span class="label-text text-xs" hx-t="@hint" hx-ext="i18n" />
	</label>
}