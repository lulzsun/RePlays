@using RePlays.Utils

@code {
    [Parameter]
    public Video video { get; set; }
}

@{
    bool? win = video.metadata.gameHistory?.win;
    string resultText = win.HasValue ? (win.HasValue ? "Win" : "Loss") : null;
    string resultColor = win.HasValue ? $"text-{(win.Value ? "green" : "red")}-500" : "";
}

<button class="focusable relative w-full block h-full group border border-slate-600" onclick="playPauseVideo('@video.folder/@video.game/@video.fileName')">
    <div class="z-[5] absolute w-full flex justify-between">
    </div>
    <div class="relative text-white w-full object-cover overflow-hidden items-center">
        <span style="background-color: rgba(0, 0, 0, 0.5);" class="z-[4] absolute bottom-1 right-1 py-0.5 px-2 rounded-full text-xs font-normal">
            @(@video.metadata.duration > 3600 ?
                    TimeSpan.FromSeconds(@video.metadata.duration).ToString(@"hh\:mm\:ss").TrimStart('0') :
                    TimeSpan.FromSeconds(@video.metadata.duration).ToString(@"mm\:ss")
                )
        </span>
        @if (@video.game == "League of Legends" && @video.metadata.gameHistory?.champion != null && @video.metadata.gameHistory?.champion != "TFTChampion")
        {
            <span class="absolute z-40 bottom-1 left-1 text-xs font-normal flex items-center">
                <img class="border border-black -mr-4 z-40 rounded-full"
                    src="https://ddragon.leagueoflegends.com/cdn/@(video.metadata.gameHistory?.version)/img/champion/@(video.metadata.gameHistory?.champion).png"
                    style="width: 20px" />
                <p class="py-0.5 pl-5 rounded-full p-2"
                    style=" background-color: rgba(0, 0, 0, 0.5)">
                    @video.metadata.gameHistory.kills/@video.metadata.gameHistory.deaths/@video.metadata.gameHistory.assists 
                    @if (@resultText != null)
                    {
                        @: - <span class="font-bold @resultColor">@resultText</span>
                    }
                </p>
            </span>
        }
        <div class="z-[3] absolute w-full h-full bg-black opacity-0 group-hover:opacity-50"></div>
        <img class="z-[2] absolute w-full" loading="lazy" alt="" src="@video.folder/@video.game/.thumbs/@video.thumbnail" />
        <img class="z-[1] relative w-full" loading="lazy" alt="" src="/static/assets/video_thumbnail_placeholder.png" />
    </div>
    <div class="bg-base-200 w-full p-4 text-left text-xs font-medium">
        @video.game
        <p class="text-gray-700 dark:text-gray-400 font-light">
            @(@video.date.ToString("d")) |
            @(@video.date.ToString("t")) |
            @((@video.size == 0) ? "0 Bytes" :
                $"{Math.Round((double)@video.size / Math.Pow(1024, Math.Floor(Math.Log(@video.size) / Math.Log(1024))), 2)} " +
                (new[] { "Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB" })[
                (int)Math.Floor(Math.Log(@video.size) / Math.Log(1024))
                ]
            )
        </p>
    </div>
</button>